     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_io_out8
     7 00000000                                 	EXTERN	_io_in8
     8 00000000                                 	EXTERN	_msg_queue
     9 00000000                                 	EXTERN	_queue16_put
    10 00000000                                 	EXTERN	_wait_KBC_sendready
    11 00000000                                 [FILE "mouse.c"]
    12                                          [SECTION .text]
    13 00000000                                 	GLOBAL	_inthandler2c
    14 00000000                                 _inthandler2c:
    15 00000000 55                              	PUSH	EBP
    16 00000001 89 E5                           	MOV	EBP,ESP
    17 00000003 6A 64                           	PUSH	100
    18 00000005 68 000000A0                     	PUSH	160
    19 0000000A E8 [00000000]                   	CALL	_io_out8
    20 0000000F 6A 62                           	PUSH	98
    21 00000011 6A 20                           	PUSH	32
    22 00000013 E8 [00000000]                   	CALL	_io_out8
    23 00000018 6A 60                           	PUSH	96
    24 0000001A E8 [00000000]                   	CALL	_io_in8
    25 0000001F 66 0F B6 C0                     	MOVZX	AX,AL
    26 00000023 66 0D 0100                      	OR	AX,256
    27 00000027 0F B7 C0                        	MOVZX	EAX,AX
    28 0000002A 50                              	PUSH	EAX
    29 0000002B 68 [00000000]                   	PUSH	_msg_queue
    30 00000030 E8 [00000000]                   	CALL	_queue16_put
    31 00000035 C9                              	LEAVE
    32 00000036 C3                              	RET
    33 00000037                                 	GLOBAL	_enable_mouse
    34 00000037                                 _enable_mouse:
    35 00000037 55                              	PUSH	EBP
    36 00000038 89 E5                           	MOV	EBP,ESP
    37 0000003A E8 [00000000]                   	CALL	_wait_KBC_sendready
    38 0000003F 68 000000D4                     	PUSH	212
    39 00000044 6A 64                           	PUSH	100
    40 00000046 E8 [00000000]                   	CALL	_io_out8
    41 0000004B E8 [00000000]                   	CALL	_wait_KBC_sendready
    42 00000050 68 000000F4                     	PUSH	244
    43 00000055 6A 60                           	PUSH	96
    44 00000057 E8 [00000000]                   	CALL	_io_out8
    45 0000005C 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
    46 0000005F C6 40 03 00                     	MOV	BYTE [3+EAX],0
    47 00000063 C9                              	LEAVE
    48 00000064 C3                              	RET
    49 00000065                                 	GLOBAL	_mouse_decode
    50 00000065                                 _mouse_decode:
    51 00000065 55                              	PUSH	EBP
    52 00000066 89 E5                           	MOV	EBP,ESP
    53 00000068 56                              	PUSH	ESI
    54 00000069 53                              	PUSH	EBX
    55 0000006A 8B 55 08                        	MOV	EDX,DWORD [8+EBP]
    56 0000006D 8B 4D 0C                        	MOV	ECX,DWORD [12+EBP]
    57 00000070 89 CE                           	MOV	ESI,ECX
    58 00000072 8A 42 03                        	MOV	AL,BYTE [3+EDX]
    59 00000075 84 C0                           	TEST	AL,AL
    60 00000077 75 11                           	JNE	L4
    61 00000079 80 F9 FA                        	CMP	CL,-6
    62 0000007C 74 06                           	JE	L16
    63 0000007E                                 L15:
    64 0000007E 31 C0                           	XOR	EAX,EAX
    65 00000080                                 L3:
    66 00000080 5B                              	POP	EBX
    67 00000081 5E                              	POP	ESI
    68 00000082 5D                              	POP	EBP
    69 00000083 C3                              	RET
    70 00000084                                 L16:
    71 00000084 C6 42 03 01                     	MOV	BYTE [3+EDX],1
    72 00000088 EB F4                           	JMP	L15
    73 0000008A                                 L4:
    74 0000008A 3C 01                           	CMP	AL,1
    75 0000008C 74 61                           	JE	L17
    76 0000008E 3C 02                           	CMP	AL,2
    77 00000090 74 54                           	JE	L18
    78 00000092 3C 03                           	CMP	AL,3
    79 00000094 74 05                           	JE	L19
    80 00000096 83 C8 FF                        	OR	EAX,-1
    81 00000099 EB E5                           	JMP	L3
    82 0000009B                                 L19:
    83 0000009B 8A 1A                           	MOV	BL,BYTE [EDX]
    84 0000009D 81 E6 000000FF                  	AND	ESI,255
    85 000000A3 89 D8                           	MOV	EAX,EBX
    86 000000A5 88 4A 02                        	MOV	BYTE [2+EDX],CL
    87 000000A8 83 E0 07                        	AND	EAX,7
    88 000000AB 89 72 08                        	MOV	DWORD [8+EDX],ESI
    89 000000AE 89 42 0C                        	MOV	DWORD [12+EDX],EAX
    90 000000B1 88 D8                           	MOV	AL,BL
    91 000000B3 0F B6 4A 01                     	MOVZX	ECX,BYTE [1+EDX]
    92 000000B7 83 E0 10                        	AND	EAX,16
    93 000000BA 89 4A 04                        	MOV	DWORD [4+EDX],ECX
    94 000000BD C6 42 03 01                     	MOV	BYTE [3+EDX],1
    95 000000C1 84 C0                           	TEST	AL,AL
    96 000000C3 74 09                           	JE	L13
    97 000000C5 81 C9 FFFFFF00                  	OR	ECX,-256
    98 000000CB 89 4A 04                        	MOV	DWORD [4+EDX],ECX
    99 000000CE                                 L13:
   100 000000CE 83 E3 20                        	AND	EBX,32
   101 000000D1 84 DB                           	TEST	BL,BL
   102 000000D3 74 07                           	JE	L14
   103 000000D5 81 4A 08 FFFFFF00               	OR	DWORD [8+EDX],-256
   104 000000DC                                 L14:
   105 000000DC F7 5A 08                        	NEG	DWORD [8+EDX]
   106 000000DF B8 00000001                     	MOV	EAX,1
   107 000000E4 EB 9A                           	JMP	L3
   108 000000E6                                 L18:
   109 000000E6 88 4A 01                        	MOV	BYTE [1+EDX],CL
   110 000000E9 C6 42 03 03                     	MOV	BYTE [3+EDX],3
   111 000000ED EB 8F                           	JMP	L15
   112 000000EF                                 L17:
   113 000000EF 83 E6 C8                        	AND	ESI,-56
   114 000000F2 89 F0                           	MOV	EAX,ESI
   115 000000F4 3C 08                           	CMP	AL,8
   116 000000F6 75 86                           	JNE	L15
   117 000000F8 88 0A                           	MOV	BYTE [EDX],CL
   118 000000FA C6 42 03 02                     	MOV	BYTE [3+EDX],2
   119 000000FE E9 FFFFFF7B                     	JMP	L15
