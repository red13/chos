     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_print_dot
     7 00000000                                 	EXTERN	_push_debug_string
     8 00000000                                 	EXTERN	_assert
     9 00000000                                 	EXTERN	_init_gdtidt
    10 00000000                                 	EXTERN	_init_pic
    11 00000000                                 	EXTERN	_io_sti
    12 00000000                                 	EXTERN	_queue16_init
    13 00000000                                 	EXTERN	_init_pit
    14 00000000                                 	EXTERN	_io_out8
    15 00000000                                 	EXTERN	_init_keyboard
    16 00000000                                 	EXTERN	_enable_mouse
    17 00000000                                 	EXTERN	_memtest
    18 00000000                                 	EXTERN	_memman_init
    19 00000000                                 	EXTERN	_memman_free
    20 00000000                                 	EXTERN	_init_timer_manager
    21 00000000                                 	EXTERN	_get_systime
    22 00000000                                 	EXTERN	_add_timer
    23 00000000                                 	EXTERN	_init_palette
    24 00000000                                 	EXTERN	_set_debug_info
    25 00000000                                 	EXTERN	_create_window_manager
    26 00000000                                 	EXTERN	_sprintf
    27 00000000                                 	EXTERN	_create_window
    28 00000000                                 	EXTERN	_fill_rect
    29 00000000                                 	EXTERN	_show_window
    30 00000000                                 	EXTERN	_move_window
    31 00000000                                 	EXTERN	_delete_timer
    32 00000000                                 	EXTERN	_io_cli
    33 00000000                                 	EXTERN	_print_string
    34 00000000                                 	EXTERN	_display_window
    35 00000000                                 	EXTERN	_queue16_status
    36 00000000                                 	EXTERN	_queue16_get
    37 00000000                                 	EXTERN	_mouse_decode
    38 00000000                                 	EXTERN	_show_whole_window
    39 00000000                                 	EXTERN	_io_stihlt
    40 00000000                                 [FILE "bootpack.c"]
    41 00000000                                 	GLOBAL	_kernel_timer_manager
    42                                          [SECTION .data]
    43 00000000                                 	ALIGNB	4
    44 00000000                                 _kernel_timer_manager:
    45 00000000 00000000                        	DD	0
    46 00000004                                 LC0:
    47 00000004 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A   	DB	"**************.."
       0000000E 2A 2A 2A 2A 2E 2E 
    48 00000014 2A 4F 4F 4F 4F 4F 4F 4F 4F 4F   	DB	"*OOOOOOOOOOO*..."
       0000001E 4F 4F 2A 2E 2E 2E 
    49 00000024 2A 4F 4F 4F 4F 4F 4F 4F 4F 4F   	DB	"*OOOOOOOOOO*...."
       0000002E 4F 2A 2E 2E 2E 2E 
    50 00000034 2A 4F 4F 4F 4F 4F 4F 4F 4F 4F   	DB	"*OOOOOOOOO*....."
       0000003E 2A 2E 2E 2E 2E 2E 
    51 00000044 2A 4F 4F 4F 4F 4F 4F 4F 4F 2A   	DB	"*OOOOOOOO*......"
       0000004E 2E 2E 2E 2E 2E 2E 
    52 00000054 2A 4F 4F 4F 4F 4F 4F 4F 2A 2E   	DB	"*OOOOOOO*......."
       0000005E 2E 2E 2E 2E 2E 2E 
    53 00000064 2A 4F 4F 4F 4F 4F 4F 4F 2A 2E   	DB	"*OOOOOOO*......."
       0000006E 2E 2E 2E 2E 2E 2E 
    54 00000074 2A 4F 4F 4F 4F 4F 4F 4F 4F 2A   	DB	"*OOOOOOOO*......"
       0000007E 2E 2E 2E 2E 2E 2E 
    55 00000084 2A 4F 4F 4F 4F 2A 2A 4F 4F 4F   	DB	"*OOOO**OOO*....."
       0000008E 2A 2E 2E 2E 2E 2E 
    56 00000094 2A 4F 4F 4F 2A 2E 2E 2A 4F 4F   	DB	"*OOO*..*OOO*...."
       0000009E 4F 2A 2E 2E 2E 2E 
    57 000000A4 2A 4F 4F 2A 2E 2E 2E 2E 2A 4F   	DB	"*OO*....*OOO*..."
       000000AE 4F 4F 2A 2E 2E 2E 
    58 000000B4 2A 4F 2A 2E 2E 2E 2E 2E 2E 2A   	DB	"*O*......*OOO*.."
       000000BE 4F 4F 4F 2A 2E 2E 
    59 000000C4 2A 2A 2E 2E 2E 2E 2E 2E 2E 2E   	DB	"**........*OOO*."
       000000CE 2A 4F 4F 4F 2A 2E 
    60 000000D4 2A 2E 2E 2E 2E 2E 2E 2E 2E 2E   	DB	"*..........*OOO*"
       000000DE 2E 2A 4F 4F 4F 2A 
    61 000000E4 2E 2E 2E 2E 2E 2E 2E 2E 2E 2E   	DB	"............*OO*"
       000000EE 2E 2E 2A 4F 4F 2A 
    62 000000F4 2E 2E 2E 2E 2E 2E 2E 2E 2E 2E   	DB	".............***"
       000000FE 2E 2E 2E 2A 2A 2A 
    63                                          [SECTION .text]
    64 00000000                                 	GLOBAL	_init_mouse_cursor
    65 00000000                                 _init_mouse_cursor:
    66 00000000 55                              	PUSH	EBP
    67 00000001 B9 00000040                     	MOV	ECX,64
    68 00000006 89 E5                           	MOV	EBP,ESP
    69 00000008 57                              	PUSH	EDI
    70 00000009 56                              	PUSH	ESI
    71 0000000A BE [00000004]                   	MOV	ESI,LC0
    72 0000000F 53                              	PUSH	EBX
    73 00000010 8D BD FFFFFEF4                  	LEA	EDI,DWORD [-268+EBP]
    74 00000016 81 EC 00000108                  	SUB	ESP,264
    75 0000001C 8A 45 0C                        	MOV	AL,BYTE [12+EBP]
    76 0000001F FC                              	CLD
    77 00000020 88 85 FFFFFEF3                  	MOV	BYTE [-269+EBP],AL
    78 00000026 8D 45 F4                        	LEA	EAX,DWORD [-12+EBP]
    79 00000029 F3                              	REP
    80 0000002A A5                              	MOVSD
    81 0000002B 89 85 FFFFFEEC                  	MOV	DWORD [-276+EBP],EAX
    82 00000031 31 FF                           	XOR	EDI,EDI
    83 00000033                                 L14:
    84 00000033 31 F6                           	XOR	ESI,ESI
    85 00000035                                 L13:
    86 00000035 8B 85 FFFFFEEC                  	MOV	EAX,DWORD [-276+EBP]
    87 0000003B 8A 9C 06 FFFFFF00               	MOV	BL,BYTE [-256+ESI+EAX*1]
    88 00000042 80 FB 2A                        	CMP	BL,42
    89 00000045 74 4D                           	JE	L19
    90 00000047                                 L10:
    91 00000047 80 FB 4F                        	CMP	BL,79
    92 0000004A 74 37                           	JE	L20
    93 0000004C                                 L11:
    94 0000004C 80 FB 2E                        	CMP	BL,46
    95 0000004F 74 1B                           	JE	L21
    96 00000051                                 L8:
    97 00000051 46                              	INC	ESI
    98 00000052 83 FE 0F                        	CMP	ESI,15
    99 00000055 7E DE                           	JLE	L13
   100 00000057 47                              	INC	EDI
   101 00000058 83 85 FFFFFEEC 10               	ADD	DWORD [-276+EBP],16
   102 0000005F 83 FF 0F                        	CMP	EDI,15
   103 00000062 7E CF                           	JLE	L14
   104 00000064 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   105 00000067 5B                              	POP	EBX
   106 00000068 5E                              	POP	ESI
   107 00000069 5F                              	POP	EDI
   108 0000006A 5D                              	POP	EBP
   109 0000006B C3                              	RET
   110 0000006C                                 L21:
   111 0000006C 0F B6 85 FFFFFEF3               	MOVZX	EAX,BYTE [-269+EBP]
   112 00000073 50                              	PUSH	EAX
   113 00000074 57                              	PUSH	EDI
   114 00000075 56                              	PUSH	ESI
   115 00000076 FF 75 08                        	PUSH	DWORD [8+EBP]
   116 00000079 E8 [00000000]                   	CALL	_print_dot
   117 0000007E 83 C4 10                        	ADD	ESP,16
   118 00000081 EB CE                           	JMP	L8
   119 00000083                                 L20:
   120 00000083 6A 07                           	PUSH	7
   121 00000085 57                              	PUSH	EDI
   122 00000086 56                              	PUSH	ESI
   123 00000087 FF 75 08                        	PUSH	DWORD [8+EBP]
   124 0000008A E8 [00000000]                   	CALL	_print_dot
   125 0000008F 83 C4 10                        	ADD	ESP,16
   126 00000092 EB B8                           	JMP	L11
   127 00000094                                 L19:
   128 00000094 6A 00                           	PUSH	0
   129 00000096 57                              	PUSH	EDI
   130 00000097 56                              	PUSH	ESI
   131 00000098 FF 75 08                        	PUSH	DWORD [8+EBP]
   132 0000009B E8 [00000000]                   	CALL	_print_dot
   133 000000A0 83 C4 10                        	ADD	ESP,16
   134 000000A3 EB A2                           	JMP	L10
   135                                          [SECTION .data]
   136 00000104                                 LC1:
   137 00000104 74 69 6D 65 72 20 65 78 65 63   	DB	"timer execution!",0x00
       0000010E 75 74 69 6F 6E 21 00 
   138                                          [SECTION .text]
   139 000000A5                                 	GLOBAL	_notify_timer
   140 000000A5                                 _notify_timer:
   141 000000A5 55                              	PUSH	EBP
   142 000000A6 89 E5                           	MOV	EBP,ESP
   143 000000A8 68 [00000104]                   	PUSH	LC1
   144 000000AD E8 [00000000]                   	CALL	_push_debug_string
   145 000000B2 58                              	POP	EAX
   146 000000B3 C9                              	LEAVE
   147 000000B4 E9 [00000000]                   	JMP	_assert
   148                                          [SECTION .data]
   149 00000115                                 LC2:
   150 00000115 63 72 65 61 74 65 20 77 69 6E   	DB	"create window manager error(%d)",0x00
       0000011F 64 6F 77 20 6D 61 6E 61 67 65 
       00000129 72 20 65 72 72 6F 72 28 25 64 
       00000133 29 00 
   151 00000135                                 LC3:
   152 00000135 64 65 73 6B 74 6F 70 00         	DB	"desktop",0x00
   153 0000013D                                 LC4:
   154 0000013D 63 72 65 61 74 65 20 77 69 6E   	DB	"create window error(%d)",0x00
       00000147 64 6F 77 20 65 72 72 6F 72 28 
       00000151 25 64 29 00 
   155 00000155                                 LC5:
   156 00000155 64 65 73 6B 74 6F 70 5F 77 6E   	DB	"desktop_wnd_id = %d",0x00
       0000015F 64 5F 69 64 20 3D 20 25 64 00 
   157 00000169                                 LC6:
   158 00000169 66 69 6C 6C 5F 72 65 63 74 20   	DB	"fill_rect error(%d)",0x00
       00000173 65 72 72 6F 72 28 25 64 29 00 
   159 0000017D                                 LC7:
   160 0000017D 73 68 6F 77 5F 77 69 6E 64 6F   	DB	"show_window error(%d)",0x00
       00000187 77 20 65 72 72 6F 72 28 25 64 
       00000191 29 00 
   161 00000193                                 LC8:
   162 00000193 63 75 72 73 6F 72 00            	DB	"cursor",0x00
   163 0000019A                                 LC9:
   164 0000019A 63 75 72 73 6F 72 5F 77 6E 64   	DB	"cursor_wnd_id = %d",0x00
       000001A4 5F 69 64 20 3D 20 25 64 00 
   165 000001AD                                 LC10:
   166 000001AD 64 65 6C 65 74 65 5F 74 69 6D   	DB	"delete_timer returns TRUE",0x00
       000001B7 65 72 20 72 65 74 75 72 6E 73 
       000001C1 20 54 52 55 45 00 
   167 000001C7                                 LC11:
   168 000001C7 74 3D 25 64 00                  	DB	"t=%d",0x00
   169 000001CC                                 LC12:
   170 000001CC 71 5F 73 74 3D 25 64 00         	DB	"q_st=%d",0x00
   171 000001D4                                 LC13:
   172 000001D4 5B 6C 63 72 20 25 34 64 20 25   	DB	"[lcr %4d %4d]",0x00
       000001DE 34 64 5D 00 
   173                                          [SECTION .text]
   174 000000B9                                 	GLOBAL	_HariMain
   175 000000B9                                 _HariMain:
   176 000000B9 55                              	PUSH	EBP
   177 000000BA B9 00000002                     	MOV	ECX,2
   178 000000BF 89 E5                           	MOV	EBP,ESP
   179 000000C1 57                              	PUSH	EDI
   180 000000C2 56                              	PUSH	ESI
   181 000000C3 53                              	PUSH	EBX
   182 000000C4 8D 75 A0                        	LEA	ESI,DWORD [-96+EBP]
   183 000000C7 83 EC 6C                        	SUB	ESP,108
   184 000000CA A1 00000FF4                     	MOV	EAX,DWORD [4084]
   185 000000CF 66 99                           	CWD
   186 000000D1 66 F7 F9                        	IDIV	CX
   187 000000D4 98                              	CWDE
   188 000000D5 89 45 94                        	MOV	DWORD [-108+EBP],EAX
   189 000000D8 66 A1 00000FF6                  	MOV	AX,WORD [4086]
   190 000000DE 66 99                           	CWD
   191 000000E0 66 F7 F9                        	IDIV	CX
   192 000000E3 98                              	CWDE
   193 000000E4 89 45 90                        	MOV	DWORD [-112+EBP],EAX
   194 000000E7 C7 45 88 00000000               	MOV	DWORD [-120+EBP],0
   195 000000EE E8 [00000000]                   	CALL	_init_gdtidt
   196 000000F3 E8 [00000000]                   	CALL	_init_pic
   197 000000F8 E8 [00000000]                   	CALL	_io_sti
   198 000000FD 68 [00000210]                   	PUSH	_msg_buf
   199 00000102 68 00000100                     	PUSH	256
   200 00000107 68 [000001F0]                   	PUSH	_msg_queue
   201 0000010C E8 [00000000]                   	CALL	_queue16_init
   202 00000111 E8 [00000000]                   	CALL	_init_pit
   203 00000116 68 000000F8                     	PUSH	248
   204 0000011B 6A 21                           	PUSH	33
   205 0000011D E8 [00000000]                   	CALL	_io_out8
   206 00000122 68 000000EF                     	PUSH	239
   207 00000127 68 000000A1                     	PUSH	161
   208 0000012C E8 [00000000]                   	CALL	_io_out8
   209 00000131 E8 [00000000]                   	CALL	_init_keyboard
   210 00000136 8D 45 E4                        	LEA	EAX,DWORD [-28+EBP]
   211 00000139 50                              	PUSH	EAX
   212 0000013A E8 [00000000]                   	CALL	_enable_mouse
   213 0000013F 83 C4 20                        	ADD	ESP,32
   214 00000142 68 BFFFFFFF                     	PUSH	-1073741825
   215 00000147 68 00400000                     	PUSH	4194304
   216 0000014C E8 [00000000]                   	CALL	_memtest
   217 00000151 68 003C0000                     	PUSH	3932160
   218 00000156 89 C3                           	MOV	EBX,EAX
   219 00000158 E8 [00000000]                   	CALL	_memman_init
   220 0000015D 68 0009E000                     	PUSH	647168
   221 00000162 68 00001000                     	PUSH	4096
   222 00000167 68 003C0000                     	PUSH	3932160
   223 0000016C E8 [00000000]                   	CALL	_memman_free
   224 00000171 8D 83 FFC00000                  	LEA	EAX,DWORD [-4194304+EBX]
   225 00000177 50                              	PUSH	EAX
   226 00000178 68 00400000                     	PUSH	4194304
   227 0000017D 68 003C0000                     	PUSH	3932160
   228 00000182 E8 [00000000]                   	CALL	_memman_free
   229 00000187 83 C4 24                        	ADD	ESP,36
   230 0000018A 68 [00000000]                   	PUSH	_kernel_timer_manager
   231 0000018F 68 003C0000                     	PUSH	3932160
   232 00000194 E8 [00000000]                   	CALL	_init_timer_manager
   233 00000199 89 35 [00000410]                	MOV	DWORD [_notify_param],ESI
   234 0000019F E8 [00000000]                   	CALL	_get_systime
   235 000001A4 05 000000C8                     	ADD	EAX,200
   236 000001A9 89 45 B4                        	MOV	DWORD [-76+EBP],EAX
   237 000001AC 8D 45 9C                        	LEA	EAX,DWORD [-100+EBP]
   238 000001AF 50                              	PUSH	EAX
   239 000001B0 8D 45 B4                        	LEA	EAX,DWORD [-76+EBP]
   240 000001B3 50                              	PUSH	EAX
   241 000001B4 FF 35 [00000000]                	PUSH	DWORD [_kernel_timer_manager]
   242 000001BA C7 45 B8 [000000A5]             	MOV	DWORD [-72+EBP],_notify_timer
   243 000001C1 C7 45 BC [00000410]             	MOV	DWORD [-68+EBP],_notify_param
   244 000001C8 E8 [00000000]                   	CALL	_add_timer
   245 000001CD E8 [00000000]                   	CALL	_init_palette
   246 000001D2 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   247 000001D9 50                              	PUSH	EAX
   248 000001DA 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   249 000001E1 50                              	PUSH	EAX
   250 000001E2 FF 35 00000FF8                  	PUSH	DWORD [4088]
   251 000001E8 E8 [00000000]                   	CALL	_set_debug_info
   252 000001ED 83 C4 20                        	ADD	ESP,32
   253 000001F0 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   254 000001F7 50                              	PUSH	EAX
   255 000001F8 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   256 000001FF 50                              	PUSH	EAX
   257 00000200 6A 01                           	PUSH	1
   258 00000202 FF 35 00000FF8                  	PUSH	DWORD [4088]
   259 00000208 68 003C0000                     	PUSH	3932160
   260 0000020D E8 [00000000]                   	CALL	_create_window_manager
   261 00000212 83 C4 14                        	ADD	ESP,20
   262 00000215 85 C0                           	TEST	EAX,EAX
   263 00000217 74 1D                           	JE	L24
   264 00000219 50                              	PUSH	EAX
   265 0000021A 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   266 0000021D 68 [00000115]                   	PUSH	LC2
   267 00000222 53                              	PUSH	EBX
   268 00000223 E8 [00000000]                   	CALL	_sprintf
   269 00000228 53                              	PUSH	EBX
   270 00000229 E8 [00000000]                   	CALL	_push_debug_string
   271 0000022E E8 [00000000]                   	CALL	_assert
   272 00000233 83 C4 10                        	ADD	ESP,16
   273 00000236                                 L24:
   274 00000236 56                              	PUSH	ESI
   275 00000237 68 [00000135]                   	PUSH	LC3
   276 0000023C 6A 00                           	PUSH	0
   277 0000023E 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   278 00000245 50                              	PUSH	EAX
   279 00000246 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   280 0000024D 50                              	PUSH	EAX
   281 0000024E 6A 01                           	PUSH	1
   282 00000250 68 003C0000                     	PUSH	3932160
   283 00000255 E8 [00000000]                   	CALL	_create_window
   284 0000025A 83 C4 1C                        	ADD	ESP,28
   285 0000025D 85 C0                           	TEST	EAX,EAX
   286 0000025F 74 1D                           	JE	L25
   287 00000261 50                              	PUSH	EAX
   288 00000262 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   289 00000265 68 [0000013D]                   	PUSH	LC4
   290 0000026A 53                              	PUSH	EBX
   291 0000026B E8 [00000000]                   	CALL	_sprintf
   292 00000270 53                              	PUSH	EBX
   293 00000271 E8 [00000000]                   	CALL	_push_debug_string
   294 00000276 E8 [00000000]                   	CALL	_assert
   295 0000027B 83 C4 10                        	ADD	ESP,16
   296 0000027E                                 L25:
   297 0000027E FF 75 A0                        	PUSH	DWORD [-96+EBP]
   298 00000281 68 [00000155]                   	PUSH	LC5
   299 00000286 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
   300 00000289 53                              	PUSH	EBX
   301 0000028A E8 [00000000]                   	CALL	_sprintf
   302 0000028F 53                              	PUSH	EBX
   303 00000290 E8 [00000000]                   	CALL	_push_debug_string
   304 00000295 6A 04                           	PUSH	4
   305 00000297 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   306 0000029E 50                              	PUSH	EAX
   307 0000029F 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   308 000002A6 50                              	PUSH	EAX
   309 000002A7 6A 00                           	PUSH	0
   310 000002A9 6A 00                           	PUSH	0
   311 000002AB FF 75 A0                        	PUSH	DWORD [-96+EBP]
   312 000002AE E8 [00000000]                   	CALL	_fill_rect
   313 000002B3 83 C4 28                        	ADD	ESP,40
   314 000002B6 85 C0                           	TEST	EAX,EAX
   315 000002B8 74 1A                           	JE	L26
   316 000002BA 50                              	PUSH	EAX
   317 000002BB 68 [00000169]                   	PUSH	LC6
   318 000002C0 53                              	PUSH	EBX
   319 000002C1 E8 [00000000]                   	CALL	_sprintf
   320 000002C6 53                              	PUSH	EBX
   321 000002C7 E8 [00000000]                   	CALL	_push_debug_string
   322 000002CC E8 [00000000]                   	CALL	_assert
   323 000002D1 83 C4 10                        	ADD	ESP,16
   324 000002D4                                 L26:
   325 000002D4 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   326 000002DB 50                              	PUSH	EAX
   327 000002DC 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   328 000002E3 50                              	PUSH	EAX
   329 000002E4 6A 00                           	PUSH	0
   330 000002E6 6A 00                           	PUSH	0
   331 000002E8 FF 75 A0                        	PUSH	DWORD [-96+EBP]
   332 000002EB E8 [00000000]                   	CALL	_show_window
   333 000002F0 83 C4 14                        	ADD	ESP,20
   334 000002F3 85 C0                           	TEST	EAX,EAX
   335 000002F5 74 1A                           	JE	L27
   336 000002F7 50                              	PUSH	EAX
   337 000002F8 68 [0000017D]                   	PUSH	LC7
   338 000002FD 53                              	PUSH	EBX
   339 000002FE E8 [00000000]                   	CALL	_sprintf
   340 00000303 53                              	PUSH	EBX
   341 00000304 E8 [00000000]                   	CALL	_push_debug_string
   342 00000309 E8 [00000000]                   	CALL	_assert
   343 0000030E 83 C4 10                        	ADD	ESP,16
   344 00000311                                 L27:
   345 00000311 8D 45 98                        	LEA	EAX,DWORD [-104+EBP]
   346 00000314 50                              	PUSH	EAX
   347 00000315 68 [00000193]                   	PUSH	LC8
   348 0000031A 6A 00                           	PUSH	0
   349 0000031C 6A 10                           	PUSH	16
   350 0000031E 6A 10                           	PUSH	16
   351 00000320 6A 01                           	PUSH	1
   352 00000322 68 003C0000                     	PUSH	3932160
   353 00000327 E8 [00000000]                   	CALL	_create_window
   354 0000032C 83 C4 1C                        	ADD	ESP,28
   355 0000032F 85 C0                           	TEST	EAX,EAX
   356 00000331 74 1A                           	JE	L28
   357 00000333 50                              	PUSH	EAX
   358 00000334 68 [0000013D]                   	PUSH	LC4
   359 00000339 53                              	PUSH	EBX
   360 0000033A E8 [00000000]                   	CALL	_sprintf
   361 0000033F 53                              	PUSH	EBX
   362 00000340 E8 [00000000]                   	CALL	_push_debug_string
   363 00000345 E8 [00000000]                   	CALL	_assert
   364 0000034A 83 C4 10                        	ADD	ESP,16
   365 0000034D                                 L28:
   366 0000034D FF 75 98                        	PUSH	DWORD [-104+EBP]
   367 00000350 68 [0000019A]                   	PUSH	LC9
   368 00000355 53                              	PUSH	EBX
   369 00000356 E8 [00000000]                   	CALL	_sprintf
   370 0000035B 53                              	PUSH	EBX
   371 0000035C E8 [00000000]                   	CALL	_push_debug_string
   372 00000361 6A 04                           	PUSH	4
   373 00000363 FF 75 98                        	PUSH	DWORD [-104+EBP]
   374 00000366 E8 FFFFFC95                     	CALL	_init_mouse_cursor
   375 0000036B FF 75 90                        	PUSH	DWORD [-112+EBP]
   376 0000036E FF 75 94                        	PUSH	DWORD [-108+EBP]
   377 00000371 FF 75 98                        	PUSH	DWORD [-104+EBP]
   378 00000374 E8 [00000000]                   	CALL	_move_window
   379 00000379 83 C4 24                        	ADD	ESP,36
   380 0000037C FF 75 9C                        	PUSH	DWORD [-100+EBP]
   381 0000037F FF 35 [00000000]                	PUSH	DWORD [_kernel_timer_manager]
   382 00000385 E8 [00000000]                   	CALL	_delete_timer
   383 0000038A 5A                              	POP	EDX
   384 0000038B 59                              	POP	ECX
   385 0000038C 85 C0                           	TEST	EAX,EAX
   386 0000038E 74 10                           	JE	L50
   387 00000390 68 [000001AD]                   	PUSH	LC10
   388 00000395 E8 [00000000]                   	CALL	_push_debug_string
   389 0000039A E8 [00000000]                   	CALL	_assert
   390 0000039F                                 L51:
   391 0000039F 5F                              	POP	EDI
   392 000003A0                                 L50:
   393 000003A0 8D 7D C4                        	LEA	EDI,DWORD [-60+EBP]
   394 000003A3 E8 [00000000]                   	CALL	_io_cli
   395 000003A8 6A 04                           	PUSH	4
   396 000003AA 6A 20                           	PUSH	32
   397 000003AC 6A 40                           	PUSH	64
   398 000003AE 6A 00                           	PUSH	0
   399 000003B0 6A 00                           	PUSH	0
   400 000003B2 FF 75 A0                        	PUSH	DWORD [-96+EBP]
   401 000003B5 E8 [00000000]                   	CALL	_fill_rect
   402 000003BA E8 [00000000]                   	CALL	_get_systime
   403 000003BF 50                              	PUSH	EAX
   404 000003C0 68 [000001C7]                   	PUSH	LC11
   405 000003C5 57                              	PUSH	EDI
   406 000003C6 E8 [00000000]                   	CALL	_sprintf
   407 000003CB 83 C4 24                        	ADD	ESP,36
   408 000003CE 6A 07                           	PUSH	7
   409 000003D0 6A 00                           	PUSH	0
   410 000003D2 6A 00                           	PUSH	0
   411 000003D4 57                              	PUSH	EDI
   412 000003D5 FF 75 A0                        	PUSH	DWORD [-96+EBP]
   413 000003D8 E8 [00000000]                   	CALL	_print_string
   414 000003DD FF 75 88                        	PUSH	DWORD [-120+EBP]
   415 000003E0 68 [000001CC]                   	PUSH	LC12
   416 000003E5 57                              	PUSH	EDI
   417 000003E6 E8 [00000000]                   	CALL	_sprintf
   418 000003EB 83 C4 20                        	ADD	ESP,32
   419 000003EE 6A 07                           	PUSH	7
   420 000003F0 6A 10                           	PUSH	16
   421 000003F2 6A 00                           	PUSH	0
   422 000003F4 57                              	PUSH	EDI
   423 000003F5 FF 75 A0                        	PUSH	DWORD [-96+EBP]
   424 000003F8 E8 [00000000]                   	CALL	_print_string
   425 000003FD 6A 1F                           	PUSH	31
   426 000003FF 6A 3F                           	PUSH	63
   427 00000401 6A 00                           	PUSH	0
   428 00000403 6A 00                           	PUSH	0
   429 00000405 FF 75 A0                        	PUSH	DWORD [-96+EBP]
   430 00000408 E8 [00000000]                   	CALL	_show_window
   431 0000040D 83 C4 28                        	ADD	ESP,40
   432 00000410 E8 [00000000]                   	CALL	_display_window
   433 00000415 68 [000001F0]                   	PUSH	_msg_queue
   434 0000041A E8 [00000000]                   	CALL	_queue16_status
   435 0000041F 5E                              	POP	ESI
   436 00000420 85 C0                           	TEST	EAX,EAX
   437 00000422 89 45 88                        	MOV	DWORD [-120+EBP],EAX
   438 00000425 0F 84 00000154                  	JE	L52
   439 0000042B 68 [000001F0]                   	PUSH	_msg_queue
   440 00000430 E8 [00000000]                   	CALL	_queue16_get
   441 00000435 5B                              	POP	EBX
   442 00000436 83 F8 FF                        	CMP	EAX,-1
   443 00000439 0F 84 00000136                  	JE	L53
   444 0000043F 0F B6 DC                        	MOVZX	EBX,AH
   445 00000442 0F B6 F0                        	MOVZX	ESI,AL
   446 00000445 E8 [00000000]                   	CALL	_io_sti
   447 0000044A 85 DB                           	TEST	EBX,EBX
   448 0000044C 0F 84 00000116                  	JE	L54
   449 00000452 83 FB 01                        	CMP	EBX,1
   450 00000455 74 34                           	JE	L55
   451 00000457 83 FB 02                        	CMP	EBX,2
   452 0000045A 0F 85 FFFFFF40                  	JNE	L50
   453 00000460 8B 15 [00000000]                	MOV	EDX,DWORD [_kernel_timer_manager]
   454 00000466 8B 02                           	MOV	EAX,DWORD [EDX]
   455 00000468 8B 58 10                        	MOV	EBX,DWORD [16+EAX]
   456 0000046B 8B 48 14                        	MOV	ECX,DWORD [20+EAX]
   457 0000046E C7 40 08 00000000               	MOV	DWORD [8+EAX],0
   458 00000475 8B 40 04                        	MOV	EAX,DWORD [4+EAX]
   459 00000478 FF 4A 08                        	DEC	DWORD [8+EDX]
   460 0000047B 89 02                           	MOV	DWORD [EDX],EAX
   461 0000047D 89 5D A8                        	MOV	DWORD [-88+EBP],EBX
   462 00000480 89 4D AC                        	MOV	DWORD [-84+EBP],ECX
   463 00000483 51                              	PUSH	ECX
   464 00000484 FF D3                           	CALL	EBX
   465 00000486 E9 FFFFFF14                     	JMP	L51
   466 0000048B                                 L55:
   467 0000048B 56                              	PUSH	ESI
   468 0000048C 8D 45 E4                        	LEA	EAX,DWORD [-28+EBP]
   469 0000048F 50                              	PUSH	EAX
   470 00000490 E8 [00000000]                   	CALL	_mouse_decode
   471 00000495 5A                              	POP	EDX
   472 00000496 59                              	POP	ECX
   473 00000497 85 C0                           	TEST	EAX,EAX
   474 00000499 0F 84 FFFFFF01                  	JE	L50
   475 0000049F FF 75 EC                        	PUSH	DWORD [-20+EBP]
   476 000004A2 FF 75 E8                        	PUSH	DWORD [-24+EBP]
   477 000004A5 68 [000001D4]                   	PUSH	LC13
   478 000004AA 57                              	PUSH	EDI
   479 000004AB E8 [00000000]                   	CALL	_sprintf
   480 000004B0 83 C4 10                        	ADD	ESP,16
   481 000004B3 8B 45 F0                        	MOV	EAX,DWORD [-16+EBP]
   482 000004B6 A9 00000001                     	TEST	EAX,1
   483 000004BB 74 04                           	JE	L40
   484 000004BD C6 45 C5 4C                     	MOV	BYTE [-59+EBP],76
   485 000004C1                                 L40:
   486 000004C1 A9 00000002                     	TEST	EAX,2
   487 000004C6 74 04                           	JE	L41
   488 000004C8 C6 45 C7 52                     	MOV	BYTE [-57+EBP],82
   489 000004CC                                 L41:
   490 000004CC 83 E0 04                        	AND	EAX,4
   491 000004CF 74 04                           	JE	L42
   492 000004D1 C6 45 C6 43                     	MOV	BYTE [-58+EBP],67
   493 000004D5                                 L42:
   494 000004D5 6A 04                           	PUSH	4
   495 000004D7 6A 3F                           	PUSH	63
   496 000004D9 6A 78                           	PUSH	120
   497 000004DB 6A 30                           	PUSH	48
   498 000004DD 6A 00                           	PUSH	0
   499 000004DF FF 75 A0                        	PUSH	DWORD [-96+EBP]
   500 000004E2 E8 [00000000]                   	CALL	_fill_rect
   501 000004E7 6A 07                           	PUSH	7
   502 000004E9 6A 30                           	PUSH	48
   503 000004EB 6A 00                           	PUSH	0
   504 000004ED 57                              	PUSH	EDI
   505 000004EE FF 75 A0                        	PUSH	DWORD [-96+EBP]
   506 000004F1 E8 [00000000]                   	CALL	_print_string
   507 000004F6 83 C4 2C                        	ADD	ESP,44
   508 000004F9 6A 0F                           	PUSH	15
   509 000004FB 6A 77                           	PUSH	119
   510 000004FD 6A 30                           	PUSH	48
   511 000004FF 6A 00                           	PUSH	0
   512 00000501 FF 75 A0                        	PUSH	DWORD [-96+EBP]
   513 00000504 E8 [00000000]                   	CALL	_show_window
   514 00000509 8B 45 E8                        	MOV	EAX,DWORD [-24+EBP]
   515 0000050C 8B 4D EC                        	MOV	ECX,DWORD [-20+EBP]
   516 0000050F 83 C4 14                        	ADD	ESP,20
   517 00000512 01 4D 90                        	ADD	DWORD [-112+EBP],ECX
   518 00000515 01 45 94                        	ADD	DWORD [-108+EBP],EAX
   519 00000518 78 45                           	JS	L56
   520 0000051A                                 L43:
   521 0000051A 83 7D 90 00                     	CMP	DWORD [-112+EBP],0
   522 0000051E 78 36                           	JS	L57
   523 00000520                                 L44:
   524 00000520 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   525 00000527 48                              	DEC	EAX
   526 00000528 39 45 94                        	CMP	DWORD [-108+EBP],EAX
   527 0000052B 7E 03                           	JLE	L45
   528 0000052D 89 45 94                        	MOV	DWORD [-108+EBP],EAX
   529 00000530                                 L45:
   530 00000530 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   531 00000537 48                              	DEC	EAX
   532 00000538 39 45 90                        	CMP	DWORD [-112+EBP],EAX
   533 0000053B 7E 03                           	JLE	L46
   534 0000053D 89 45 90                        	MOV	DWORD [-112+EBP],EAX
   535 00000540                                 L46:
   536 00000540 FF 75 90                        	PUSH	DWORD [-112+EBP]
   537 00000543 FF 75 94                        	PUSH	DWORD [-108+EBP]
   538 00000546 FF 75 98                        	PUSH	DWORD [-104+EBP]
   539 00000549 E8 [00000000]                   	CALL	_move_window
   540 0000054E 83 C4 0C                        	ADD	ESP,12
   541 00000551 E9 FFFFFE4A                     	JMP	L50
   542 00000556                                 L57:
   543 00000556 C7 45 90 00000000               	MOV	DWORD [-112+EBP],0
   544 0000055D EB C1                           	JMP	L44
   545 0000055F                                 L56:
   546 0000055F C7 45 94 00000000               	MOV	DWORD [-108+EBP],0
   547 00000566 EB B2                           	JMP	L43
   548 00000568                                 L54:
   549 00000568 FF 75 A0                        	PUSH	DWORD [-96+EBP]
   550 0000056B E8 [00000000]                   	CALL	_show_whole_window
   551 00000570 E9 FFFFFE2A                     	JMP	L51
   552 00000575                                 L53:
   553 00000575 E8 [00000000]                   	CALL	_io_sti
   554 0000057A E9 FFFFFE21                     	JMP	L50
   555 0000057F                                 L52:
   556 0000057F E8 [00000000]                   	CALL	_io_stihlt
   557 00000584 E9 FFFFFE17                     	JMP	L50
   558 00000589                                 	GLOBAL	_msg_queue
   559                                          [SECTION .data]
   560 000001E2 00 00 00 00 00 00 00 00 00 00   	ALIGNB	16
       000001EC 00 00 00 00 
   561 000001F0                                 _msg_queue:
   562 000001F0 00 00 00 00 00 00 00 00 00 00   	RESB	24
       000001FA 00 00 00 00 00 00 00 00 00 00 
       00000204 00 00 00 00 
   563 00000208                                 	GLOBAL	_msg_buf
   564                                          [SECTION .data]
   565 00000208 00 00 00 00 00 00 00 00         	ALIGNB	16
   566 00000210                                 _msg_buf:
   567 00000210 00 00 00 00 00 00 00 00 00 00   	RESB	512
       0000021A 00 00 00 00 00 00 00 00 00 00 
       00000224 00 00 00 00 00 00 00 00 00 00 
       0000022E 00 00 00 00 00 00 00 00 00 00 
       00000238 00 00 00 00 00 00 00 00 00 00 
       00000242 00 00 00 00 00 00 00 00 00 00 
       0000024C 00 00 00 00 00 00 00 00 00 00 
       00000256 00 00 00 00 00 00 00 00 00 00 
       00000260 00 00 00 00 00 00 00 00 00 00 
       0000026A 00 00 00 00 00 00 00 00 00 00 
       00000274 00 00 00 00 00 00 00 00 00 00 
       0000027E 00 00 00 00 00 00 00 00 00 00 
       00000288 00 00 00 00 00 00 00 00 00 00 
       00000292 00 00 00 00 00 00 00 00 00 00 
       0000029C 00 00 00 00 00 00 00 00 00 00 
       000002A6 00 00 00 00 00 00 00 00 00 00 
       000002B0 00 00 00 00 00 00 00 00 00 00 
       000002BA 00 00 00 00 00 00 00 00 00 00 
       000002C4 00 00 00 00 00 00 00 00 00 00 
       000002CE 00 00 00 00 00 00 00 00 00 00 
       000002D8 00 00 00 00 00 00 00 00 00 00 
       000002E2 00 00 00 00 00 00 00 00 00 00 
       000002EC 00 00 00 00 00 00 00 00 00 00 
       000002F6 00 00 00 00 00 00 00 00 00 00 
       00000300 00 00 00 00 00 00 00 00 00 00 
       0000030A 00 00 00 00 00 00 00 00 00 00 
       00000314 00 00 00 00 00 00 00 00 00 00 
       0000031E 00 00 00 00 00 00 00 00 00 00 
       00000328 00 00 00 00 00 00 00 00 00 00 
       00000332 00 00 00 00 00 00 00 00 00 00 
       0000033C 00 00 00 00 00 00 00 00 00 00 
       00000346 00 00 00 00 00 00 00 00 00 00 
       00000350 00 00 00 00 00 00 00 00 00 00 
       0000035A 00 00 00 00 00 00 00 00 00 00 
       00000364 00 00 00 00 00 00 00 00 00 00 
       0000036E 00 00 00 00 00 00 00 00 00 00 
       00000378 00 00 00 00 00 00 00 00 00 00 
       00000382 00 00 00 00 00 00 00 00 00 00 
       0000038C 00 00 00 00 00 00 00 00 00 00 
       00000396 00 00 00 00 00 00 00 00 00 00 
       000003A0 00 00 00 00 00 00 00 00 00 00 
       000003AA 00 00 00 00 00 00 00 00 00 00 
       000003B4 00 00 00 00 00 00 00 00 00 00 
       000003BE 00 00 00 00 00 00 00 00 00 00 
       000003C8 00 00 00 00 00 00 00 00 00 00 
       000003D2 00 00 00 00 00 00 00 00 00 00 
       000003DC 00 00 00 00 00 00 00 00 00 00 
       000003E6 00 00 00 00 00 00 00 00 00 00 
       000003F0 00 00 00 00 00 00 00 00 00 00 
       000003FA 00 00 00 00 00 00 00 00 00 00 
       00000404 00 00 00 00 00 00 00 00 00 00 
       0000040E 00 00 
   568 00000410                                 	GLOBAL	_notify_param
   569                                          [SECTION .data]
   570 00000410                                 	ALIGNB	4
   571 00000410                                 _notify_param:
   572 00000410 00 00 00 00                     	RESB	4
